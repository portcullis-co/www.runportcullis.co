---
import MainLayout from "@/layouts/main-layout.astro";
import { Button } from "@/components/ui/button";

// Get URL parameters
const { searchParams } = Astro.url;
const email = searchParams.get('email');
const inviteId = searchParams.get('invite_id');
const channelId = searchParams.get('channel_id');

// If we don't have an inviteId, this is the initial load
const isInitialLoad = !inviteId;
---

<MainLayout 
  title="Setting Up Your Workspace" 
  description="We're getting your Slack workspace connected"
  mainClass="container max-w-3xl py-10"
>
  <div class="flex flex-col items-center justify-center text-center space-y-8">
    <div class="space-y-3">
      <h1 class="text-4xl font-bold tracking-tighter">
        {isInitialLoad ? "Setting Up Your Workspace..." : "Workspace Connected!"}
      </h1>
      <p class="text-muted-foreground">
        {isInitialLoad 
          ? "We're creating your secure channel and sending your invitation..." 
          : "Check your email for the Slack Connect invitation"}
      </p>
    </div>

    <div class="space-y-4" id="status-container">
      {isInitialLoad && email ? 
        <div class="loading-spinner">Setting up...</div> :
        <div class="space-y-4">
          <p class="text-green-600 font-medium">âœ“ Invitation sent successfully</p>
          <p class="text-sm text-muted-foreground">
            Click the link in your email to join the Slack channel
          </p>
        </div>
      }
    </div>
  </div>
</MainLayout>

{isInitialLoad && email && (
  <script define:vars={{ email }}>
    async function setupWorkspace() {
      try {
        const response = await fetch('/api/slack/invite', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email })
        });

        const data = await response.json();
        
        if (data.ok) {
          // Redirect to success page with invite details
          window.location.href = `/success?invite_id=${data.inviteId}&channel_id=${data.channelId}&email=${email}`;
        } else {
          throw new Error(data.error);
        }
      } catch (error) {
        const container = document.getElementById('status-container');
        if (container) {
          container.innerHTML = `
            <div class="text-red-600">
              <p>Something went wrong. Please try again or contact support.</p>
            </div>
          `;
        }
      }
    }

    // Start the setup process
    setupWorkspace();
  </script>
)}

<style>
  .loading-spinner {
    /* Add your spinner styling here */
    color: #666;
    font-size: 0.875rem;
  }
</style> 